{"version":3,"sources":["logo.svg","allegro.svg","Leaderboard.js","Inspirations.js","Legend.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","sortFormContainer","display","justifyContent","sortForm","width","marginBottom","sortFormLabel","color","palette","primary","main","sortFormSelect","borderColor","sortFormSelectIcon","root","backgroundColor","background","paper","inline","chips","height","alignItems","loader","stats","stat","statText","marginLeft","statIcon","Leaderboard","contributions","classes","eventDate","data","useState","sortBy","setSortBy","items","useMemo","sort","a","b","valueA","valueB","console","log","className","FormControl","InputLabel","htmlFor","Select","native","value","onChange","target","inputProps","name","id","icon","selected","List","length","ListItem","ListItemText","map","index","login","avatar","score","repos","totalPRs","Fragment","ListItemAvatar","Avatar","alt","src","Link","href","secondary","renderChips","ListItemSecondaryAction","Typography","style","Divider","component","repoName","Chip","size","label","title","spacing","marginTop","list","Inspirations","gutterBottom","variant","align","inspirations","it","i","link","dense","userRepos","legend","star","marginRight","repository","Legend","brand","guides","margin","padding","guideLink","logo","maxHeight","header","textAlign","gridArea","footer","app","gridTemplateColumns","App","AppBar","position","Toolbar","allegro","Container","Date","updatedAt","toLocaleTimeString","timeZone","createTheme","contrastText","document","getElementById","hasChildNodes","hydrate","render","ThemeProvider"],"mappings":"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","file":"static/js/main.0e2be4c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cb49da89.svg\";","export default __webpack_public_path__ + \"static/media/allegro.7635f5a6.svg\";","import React, { useState, useMemo } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport StarIcon from '@material-ui/icons/Star';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport Chip from \"@material-ui/core/Chip\";\nimport Link from \"@material-ui/core/Link\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nconst useStyles = makeStyles((theme) => ({\n    sortFormContainer: { display: \"flex\", justifyContent: \"flex-end\" },\n    sortForm: { width: 160, marginBottom: 16 },\n    sortFormLabel: { color: theme.palette.primary.main },\n    sortFormSelect: {\n        color: theme.palette.primary.main,\n        \"&:before\": { borderColor: theme.palette.primary.main },\n    },\n    sortFormSelectIcon: { color: theme.palette.primary.main },\n    root: { width: \"100%\", backgroundColor: theme.palette.background.paper },\n    inline: { display: \"inline\" },\n    chips: { display: \"flex\", height: 42, alignItems: \"center\" },\n    loader: {\n        display: \"flex\",\n        height: 200,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    stats: {\n        width: 100,\n        color: theme.palette.primary.main,\n    },\n    stat: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    statText: {\n        marginLeft: 4,\n    },\n    statIcon: {\n        height: 20,\n    },\n}));\n\nexport default function Leaderboard({ contributions }) {\n    const classes = useStyles();\n    const { eventDate, data } = contributions;\n    const [sortBy, setSortBy] = useState('score');\n\n    const items = useMemo(() => [...data].sort((a, b) => {\n        const valueA = a[sortBy];\n        const valueB = b[sortBy];\n\n        console.log(a, b, sortBy)\n\n        return valueB - valueA;\n    }), [data, sortBy]);\n\n    return (\n        <>\n            <div className={classes.sortFormContainer}>\n                <FormControl className={classes.sortForm}>\n                    <InputLabel className={classes.sortFormLabel} htmlFor=\"sort-by\">Sortuj po:</InputLabel>\n                    <Select\n                        className={classes.sortFormSelect}\n                        native\n                        value={sortBy}\n                        onChange={(value) => setSortBy(value.target.value)}\n                        inputProps={{\n                            name: 'sort-by',\n                            id: 'sort-by',\n                            classes: {\n                                icon: classes.sortFormSelectIcon,\n                            },\n                        }}\n                    >\n                        <option selected value=\"score\">Gwiazdkach</option>\n                        <option value=\"totalPRs\">Pull Requestach</option>\n                    </Select>\n                </FormControl>\n            </div>\n\n            <List className={classes.root}>\n                {items.length === 0 ?\n                    <ListItem alignItems=\"flex-start\"><ListItemText>Brak Pull Requestów</ListItemText></ListItem> : \"\"}\n                {items.map(({ login, avatar, score, repos, totalPRs }, index) => (\n                    <React.Fragment key={login}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar alt={login} src={avatar}/>\n                            </ListItemAvatar>\n                            <ListItemText className={classes.chips}\n                                        primary={<Link href={`https://github.com/pulls?q=is%3Apr+author%3A${login}+archived%3Afalse+created:${eventDate}`}>{login}</Link>}\n                                        secondary={renderChips(repos)}/>\n                            <ListItemSecondaryAction className={classes.stats}>\n                                <div className={classes.stat}>\n                                    <StarIcon className={classes.statIcon}/>\n                                    <Typography className={classes.statText}>{score}</Typography>\n                                </div>\n                                <div style={{ marginBottom: 4 }} className={classes.stat}>\n                                    <TrendingUpIcon className={classes.statIcon}/>\n                                    <Typography className={classes.statText}>{totalPRs}</Typography>\n                                </div>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        {index === data.length - 1 ? \"\" : <Divider component=\"li\"/>}\n                    </React.Fragment>\n                ))}\n            </List>\n        </>\n    );\n}\n\nfunction renderChips(repos) {\n    return repos.map(repoName => (\n        <Chip\n            component=\"small\"\n            key={repoName}\n            style={{ marginLeft: '10px' }}\n            size=\"small\"\n            label={repoName}\n        />\n    ));\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport userRepos from './data/repositories.json';\nimport inspirations from './data/inspirations.json';\n\nconst useStyles = makeStyles(theme => ({\n    title: { color: 'white', marginBottom: theme.spacing(2), marginTop: theme.spacing(2) },\n    list: { width: '100%', backgroundColor: theme.palette.background.paper, marginBottom: theme.spacing(4) }\n}));\n\nexport default function Inspirations() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Typography gutterBottom variant=\"h4\" align=\"center\" className={classes.title}>Inspiracje</Typography>\n            <List className={classes.list}>\n                {inspirations.map((it, i) =>\n                    <React.Fragment key={it.title}>\n                        <ListItem>\n                            <ListItemText primary={it.title} secondary={\n                                <Link href={it.link}>{it.label}</Link>\n                            }/>\n                        </ListItem>\n                        {i === inspirations.length - 1 ? \"\" : <Divider component=\"li\"/>}\n                    </React.Fragment>\n                )}\n            </List>\n            <Typography gutterBottom variant=\"h4\" align=\"center\" className={classes.title}>\n                Projekty zgłoszone przez uczestników\n            </Typography>\n            <List dense className={classes.list}>\n                {userRepos.map((it, i) =>\n                    <React.Fragment key={it}>\n                        <ListItem>\n                            <ListItemText primary={<Link href={it}>{it}</Link>}/>\n                        </ListItem>\n                        {i === userRepos.length - 1 ? \"\" : <Divider component=\"li\"/>}\n                    </React.Fragment>\n                )}\n            </List>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport StarIcon from '@material-ui/icons/Star';\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles(theme => ({\n    legend: { color: 'white', marginBottom: theme.spacing(2), marginTop: theme.spacing(2), display: \"flex\", justifyContent:\"center\", alignItems:\"center\" },\n    star: { height: 40, marginRight: theme.spacing(1), marginLeft: theme.spacing(1) },\n    score: { display: \"flex\", alignItems:\"center\", color: theme.palette.primary.main },\n    repository: { marginLeft: theme.spacing(2), marginRight: theme.spacing(2) }\n}));\n\nexport default function Legend() {\n    const classes = useStyles();\n    return (\n        <div className={classes.legend}>\n            <Typography>Legenda:</Typography>\n            <Chip\n                component=\"small\"\n                size=\"small\"\n                label=\"nazwa repozytorium\"\n                className={classes.repository}\n            />\n            <div className={classes.score}>\n                <TrendingUpIcon className={classes.star} />\n                <Typography>Suma Pull Requestów</Typography>\n                <StarIcon className={classes.star} />\n                <Typography>Suma iloczynów pull requestów oraz gwiazdek repozytoriów</Typography>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport allegro from './allegro.svg';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport Leaderboard from \"./Leaderboard\";\nimport Inspirations from \"./Inspirations\";\nimport contributions from \"./data/contributions.json\";\nimport Legend from './Legend';\n\nconst useStyles = makeStyles(theme => ({\n    root: { height: '100vh', width: '100%' },\n    brand: { marginRight: theme.spacing(2) },\n    guides: { display: 'flex', justifyContent: 'space-between', margin: 0, padding: 0 },\n    guideLink: { color: '#fff' },\n    logo: { marginTop: 20, width: '100%', maxHeight: 300 },\n    header: { margin: theme.spacing(4), textAlign: 'center', gridArea: '1 / 1 / 2 / 2' },\n    main: { gridArea: '2 / 1 / 3 / 2' },\n    title: { padding: theme.spacing(2), color: '#fff' },\n    footer: { gridArea: '3 / 1 / 4 / 2' },\n    app: { display: 'grid', gridTemplateColumns: '1fr' }\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <img src={allegro} className={classes.brand} alt=\"allegro\"/>\n                    <Typography variant=\"h6\">\n                        Hacktoberfest\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Container className={classes.app}>\n                <header className={classes.header}>\n                    <img src={logo} className={classes.logo} alt=\"logo\"/>\n                    <ul className={classes.guides}>\n                      <li><a className={classes.guideLink} href=\"https://opensource.guide\">https://opensource.guide</a></li>\n                      <li><a className={classes.guideLink} href=\"https://hacktoberfest.digitalocean.com\">https://hacktoberfest.digitalocean.com</a></li>\n                    </ul>\n\n                </header>\n                <main className={classes.main}>\n                    <Typography gutterBottom variant=\"h3\" style={{color: 'white'}} align=\"center\">TOP 100</Typography>\n                    <Legend />\n                    <Leaderboard contributions={contributions} />\n                    <Typography component=\"p\" variant=\"caption\" align=\"center\" className={classes.title}>\n                        is:<strong>pr</strong> created:<strong>{contributions.eventDate}</strong> author:<strong>login</strong><br />(last update: <strong>{new Date(contributions.updatedAt).toLocaleTimeString(\"pl-PL\", { timeZone: \"Europe/Warsaw\" })}</strong>)\n                    </Typography>\n                </main>\n                <footer className={classes.footer}>\n                    <Inspirations/>\n                </footer>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport { createTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport App from './App';\nimport './index.css';\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#F74700',\n            contrastText: \"#FFFFFF\"\n        },\n    },\n});\n\nconst root = document.getElementById('root');\nconst fn = root.hasChildNodes() ? hydrate : render;\n\nfn(\n    <ThemeProvider theme={theme}>\n        <App />\n    </ThemeProvider>,\n    root\n);\n"],"sourceRoot":""}